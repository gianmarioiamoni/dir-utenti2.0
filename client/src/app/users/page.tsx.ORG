// "use client";

// import React, { FC, useState } from 'react';

// import { useUserSearch } from '@/hooks/useUserSearch';
// import { useUsers } from '@/hooks/useUsers';
// import { useMessage } from '@/hooks/useMessage';

// import UserCard from '@/components/UserCard';
// import UserSearchBar from '@/components/UserSearchBar';
// import Pagination from '@/components/Pagination';
// import AddUserDialog from '@/components/UserDataDialog';
// import Loader from '@/components/Loader';


// const UsersPage: FC = () => {

//     const [currentPage, setCurrentPage] = useState(1);

//     const { data, isModalOpen, onCloseModal, onOpenModal, isLoading, isError, error } = useUsers(currentPage);
//     const { showError } = useMessage();

//     if (isError) {
//         showError(error?.message || "Errore caricamento utenti");
//         return;
//     }

//     return (
//         <div className="container flex flex-col min-h-screen px-8 py-8 bg-background text-foreground">

//             {/* Modale */}
//             <AddUserDialog isOpen={isModalOpen} onClose={onCloseModal} page={currentPage} />

//             {/* Mostra il loader o lista utenti */}
//             {isLoading ? (
//                 <div className="flex justify-center items-center h-32">
//                     <Loader isLoading={isLoading} />
//                 </div>
//             ) : (
//                     <>
//                     {/* Titolo e bottone di aggiunta utente */}
//                     <div className="flex justify-between items-center mb-6">
//                         <h1 className="text-3xl font-bold">Lista Utenti</h1>
//                         <button
//                             className="btn-primary"
//                             onClick={onOpenModal}
//                         >
//                             Aggiungi utente
//                         </button>
//                         </div>
                        
//                     {/* Lista utenti */}
//                     <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4">
//                         {data?.users.map((user) => (
//                             <UserCard
//                                 key={user._id}
//                                 user={user}
//                                 page={currentPage}
//                             />
//                         ))}
//                     </div>

//                     {/* Pagination */}
//                     {data?.total && (
//                         <div className="mt-20 flex justify-center">
//                             <Pagination
//                                 currentPage={currentPage}
//                                 totalPages={Math.ceil(data.total / 10)}
//                                 // onPageChange={handlePageChange}
//                                 onPageChange={setCurrentPage}
//                             />
//                         </div>

//                     )}
//                 </>
//             )}
//         </div>
//     );
// };

// export default UsersPage;